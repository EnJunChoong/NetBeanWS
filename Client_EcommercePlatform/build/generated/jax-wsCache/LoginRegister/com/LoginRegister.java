
package com;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LoginRegister", targetNamespace = "http://com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LoginRegister {


    /**
     * 
     * @param zip
     * @param password
     * @param address2
     * @param city
     * @param phone
     * @param address1
     * @param name
     * @param state
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "register", targetNamespace = "http://com/", className = "com.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://com/", className = "com.RegisterResponse")
    @Action(input = "http://com/LoginRegister/registerRequest", output = "http://com/LoginRegister/registerResponse")
    public boolean register(
        @WebParam(name = "zip", targetNamespace = "")
        String zip,
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "address1", targetNamespace = "")
        String address1,
        @WebParam(name = "address2", targetNamespace = "")
        String address2,
        @WebParam(name = "city", targetNamespace = "")
        String city,
        @WebParam(name = "state", targetNamespace = "")
        String state,
        @WebParam(name = "phone", targetNamespace = "")
        String phone,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ReturnName")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ReturnName", targetNamespace = "http://com/", className = "com.ReturnName")
    @ResponseWrapper(localName = "ReturnNameResponse", targetNamespace = "http://com/", className = "com.ReturnNameResponse")
    @Action(input = "http://com/LoginRegister/ReturnNameRequest", output = "http://com/LoginRegister/ReturnNameResponse")
    public String returnName();

    /**
     * 
     * @param password
     * @param email
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://com/", className = "com.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://com/", className = "com.LoginResponse")
    @Action(input = "http://com/LoginRegister/loginRequest", output = "http://com/LoginRegister/loginResponse")
    public boolean login(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

}
